                        ==>Hashing

  Hashing is a technique or process that allows for efficient operations,
  such as insertion, deletion, and searching, with an average constant
  time complexity of O(1).

        -HashMap and HashSet are the Key components of hashing.

                     ==>[I] HashMap

        - HashMap is a data structure that implements the Map interface.(Inheritance)
        - It stores data in the form of key-value pairs.
        - It uses hashing to efficiently store and retrieve key-value pairs.
        - HashMap allows only one null key and multiple null values,but
          keys are unique(no duplicate keys are allowed).
        - It does not maintain the insertion order.
        - It provides constant-time average complexity for basic operations
          such as get,put,and remove.

    Syntax:
          HashMap<KeyDataType,ValueDataType> map = new HashMap<>();
    Example:
          HashMap<Integer,Integer> map = new HashMap<>();

    Operations on HashMap:-

        -Adding an element:                         put(key,value)

        -Retrieve an element:                       get(key)
        -Retrieve a key from entry set:             getKey()

        -Check if map contain particular key:       containsKey(key)
        -Check if map contain particular value:     containsValue(key)

        -get value if key exist else put default    getOrDefault(Key,DefaultValue)
        -Size:                                      size()

        -Remove:                                    remove(key)
        -Replace or Update:                         replace(key,newValue)
        -DeleteAll:                                 clear()
        -Check if map is empty:                     isEmpty()


for(var a : map.entrySet()){
    a.getValue();             //mtlb a key ki value nikalo  //(a) nhi likh skte
}

for(int a : arr){
    map.get(a);                 //mtlb a key ki value nikalo
}
